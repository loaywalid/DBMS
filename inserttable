#! usr/bin/bash

tname=$(zenity --entry --title="Enter table name")
if [[ ! -e ~/database/database/$dbname/$tname ]] ; then
    clear
    zenity --warning --title="Warning" --text="Table not existed !" --no-wrap

    databaseconnectionselection
    
else 
        x=$(head -n1 ~/database/database/$dbname/"$tname.md" | awk -F : '{print $1;}') 
        
        
        primarykey=$(zenity --entry --title="Please insert primary key for verification ")
        if [ "$x" = "int" ] && [[ $primarykey =~ [0-99]+$ ]] ;then 
        echo -e "" >> ~/database/database/$dbname/$tname


        elif  [ "$x" = "string" ] ; then
        echo -e "" >> ~/database/database/$dbname/$tname


        else
zenity --warning --title="Warning" --text="type is not matched, type = $x" --no-wrap
        break ;
        fi

fi

declare -i number=$(head -n1 ~/database/database/$dbname/"$tname.md" | awk -F : '{print NF-1 ;}')


for i in $(seq 1 $number); 
do 
    col_name=$(head -n1 ~/database/database/$dbname/$tname | sed  $'s/:/ /g' | awk -v i=$i -F " " '{ print $i }')
    col_type=$(head -n1 ~/database/database/$dbname/"$tname.md" | sed  $'s/:/ /g' | awk -v i=$i -F " " '{ print $i }')
    while [ -e ~/database/database/$dbname/$tname ]
        do
        x=$(zenity --entry --title="please enter the $col_name")
            if [ "$col_type" = "int" ] && [[ $x =~ [0-99]+$ ]]
                then echo -n  "$x:" >> ~/database/database/$dbname/$tname
                break
            elif [ "$col_type" = "string" ]
                then echo -n   "$x:" >> ~/database/database/$dbname/$tname
                break
            else
zenity --warning --title="Warning" --text="data type is not matched" --no-wrap
                continue 
            fi
        done
done

